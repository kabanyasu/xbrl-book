= 事前準備

== 本章の目的

本章ではプログラムを使用するために、「プログラミングで利用するEDINET APIの準備」と「プログラムを動作させるためのソフトウェアの環境構築」について説明します。

もうすでにEDINET APIの利用方法をご存じの方・Pythonが利用可能な状態にある方は、本章を読み飛ばしていただいて結構です。

== EDINET APIを使えるようにしよう

まず、有報をダウンロードするために必須のAPI@<fn>{fn1}についてです。

EDINET APIとは、使用者が直接EDINETのウェブページに行くのではなく、プログラムを介してEDINETのデータベースから効率的にデータを取得できるAPIです。EDINET APIにより、EDINET利用者は効率的に開示情報を取得することが可能となります。

そんなEDINET APIは以下の2種類です。

 * 書類一覧API
 * 書類取得API

書類一覧APIは提出された書類を把握するためのAPIです。こちらはEDINETに提出された書類の一覧を取得するAPIとなっています。書類一覧APIを用いることで、日付ごとに分類された提出書類の基本情報を取得出来ます。

書類取得APIは提出された書類を取得するためのAPIです。このAPIを活用すると、取得書類の種類の指定、ファイル名を企業名にしてダウンロード、フィルタリングした企業の書類だけダウンロードなどが可能になります。

EDIENT APIの使用には、アカウントの作成とAPIキーの発行が必要となります。

=== 注意点

アカウント作成、APIキーの発行にはいくつか注意点があります。この注意点の項目ができていないと、アカウント作成やAPIキー発行が出来ないこともあります。

公式のEDINET API仕様書ではMicrosoft Edgeでの利用方法が詳しく記載されていましたが、Google Chromeでの設定方法の記載がなく利用者も多いと思うので今回はChromeの説明をします。

Microsoft Edgeご利用の方は以下のURLからダウンロードできるEDINET_API仕様書を参考にしてください。

▼ EDINET操作ガイド　EDINET API仕様書(Version2)

https://disclosure2dl.edinet-fsa.go.jp/guide/static/disclosure/WZEK0110.html

==== ポップアップの設定

Google Chromeを開き、右上の三点リーダーから「設定」を開きます。

//image[0301_chromeの設定をクリック][Chromeの設定を開く][scale=0.6]{
//}

画面の左のサイドバーから「プライバシーとセキュリティ」→「サイトの設定」の順で開きます。

//image[0302_サイトの設定をクリック][サイトの設定を開く]{
//}

次に「ポップアップとリダイレクト」を開きます。

//image[0303_ポップアップとリダイレクトをクリック][ポップアップとリダイレクトを開く]{
//}

動作のカスタマイズで「ポップアップの送信やリダイレクトの使用を許可するサイト」を開きます。

//image[0304_ポップアップサイトの追加][ポップアップサイトの追加]{
//}

「サイトの追加」画面でEDIENT APIのサイトリンク「https://api.edinet-fsa.go.jp」を入力し、追加します。

//image[0305_サイトの追加][EDIENT APIのサイトURLを追加]{
//}

これでポップアップの設定は完了です。

==== JavaScriptの設定

再度、Chromeの設定から「プライバシーとセキュリティ」を開きます。

//image[0306_セキュリティの設定][プライバシーとセキュリティの設定を開く]{
//}

次に「V8のセキュリティを管理する」を開きます。

//image[0307_v8設定][V8オプティマイザーを許可]{
//}

「サイトでのV8オプティマイザーの使用を許可する」にチェックを入れてください。

以上で、JavaScriptの設定は完了です。

==== Cookieの設定

再度、設定画面から「プライバシーとセキュリティの設定」→「サードパーティCookie」の順で開きます。

//image[0308_サードパーティクッキーをクリック][サードパーティCookieの設定を開く][scale=0.8]{
//}

「サードパーティCookieを許可する」にチェックを入れます。

//image[0309_サードパーティ設定][サードパーティのCookieを許可する][scale=0.6]{
//}

以上でCookieの設定及びChromeの設定は完了となります。

=== アカウント作成

アカウントを作成する場合には、以下のURLから、サインイン画面を表示させます。

https://api.edinet-fsa.go.jp/api/auth/index.aspx?mode=1

下の「今すぐサインアップ」からアカウントを作成します。

//image[0310_サインイン画面][EDINET APIのサインイン画面][scale=0.6]{
//}

サインアップ画面の上のフォームにメールアドレスを入力し、「確認コードを送信」をクリックします。

//image[0311_ユーザー詳細入力画面1][メールアドレスを入力し確認コードを受信する][scale=0.5]{
//}

確認コードを入力し、「コードの確認」へ進みます。

//image[0312_ユーザー詳細入力画面2][確認コードを入力][scale=0.5]{
//}

コードが正しく受理されると確認コード入力欄がなくなります。 次に下段のパスワードを設定していきます。 「新しいパスワード」と「新しいパスワードを確認してください」のフォームには同一のパスワードの設定します。パスワードはパスワードポリシーに沿っていないとエラーが表示されます。

//image[0313_ユーザーパスワード入力画面][ユーザーパスワードを入力][scale=0.5]{
//}

パスワードが受理されると、次に多要素認証に移ります。「国コード」と「電話番号」をそれぞれ入力したのち、以下のいずれかの多要素認証を行います。

 1. SMSによる本人確認 SMSにて通知される確認コードを多要素確認コード入力画面に入力して認証を行う。
 2. 自動音声による本人確認 登録した電話番号に発信される自動音声通話を受け取り、音声ガイドに従い、テンキーで「#」を入力することにより認証を行う。
 3. SMSか電話でコードを受け取る。

//image[0314_多要素認証][多要素認証を行う][scale=0.5]{
//}

SMSか電話にて受け取った確認コードを入力するとAPIキー発行画面が表示されアカウント作成が完了となります。

@<embed>{|html|<img width=300 alt="多要素認証確認コードを入力" src="images\0315_多要素認証確認コード.png">}

//image[0315_多要素認証確認コード][多要素認証確認コードを入力][scale=0.5]{
//}

続けてAPIキーの発行についてです。多要素認証でのサインイン後にAPIキー発行画面がポップアップ画面で表示されます。

連絡先を入力し、「連絡先登録（Save）」をクリックします。

※2回目以降は以下の画像のように「連絡先変更（Save）」となります。

//image[0316_APIキー発行画面][APIキー発行画面]{
//}

確認画面が2つ表示されるのでどちらも「OK」を押します。

//image[0317_連絡先保存確認画面][連絡先保存確認画面][scale=0.8]{
//}

//image[0318_連絡先保存完了画面][連絡先保存完了画面][scale=0.8]{
//}

API発行画面にAPIキーが表示されます。 このAPIキーはコードの中に入れるため、メモしておいてください。

//image[0319_連絡先発行][APIキーを取得]{
//}

== コードエディタを使おう

次にプログラムを記述し実行する作業場「コードエディタ」の設定をしていきます。

=== VSCodeを使えるようにしよう

コードエディタは様々なものが存在しますが、世の中で広く使われている「VSCode」というものを使用していきます。では、VSCodeのインストール手順を確認していきましょう。なお、本書ではWindowsでのセットアップを想定しています。

==== VSCode公式サイトに移動し、インストーラーをダウンロード

以下のURLから「Download for Windows」をクリックしてください。

https://code.visualstudio.com/

「VSCodeUserSetup-x64-1.94.0.exe」というファイルがダウンロードできれば成功です。

==== インストーラーによるセットアップ

先ほどダウンロードした.exeファイルを開いてください。

以下の画像のような画面が出現します。

「同意する」を選択してから「次へ(N)>」をクリックします。

//image[0320_VSコード同意画面][VSCode 同意画面]{
//}

追加の設定画面が表示されます。

全ての項目にチェックをし、「次へ(N)>」をクリックします。

//image[0321_VSコードセットアップ項目][VSCodeインストール時に実行するタスクを選択]{
//}

今まで選択した項目に間違いがなければ、「インストール(I)」をクリックし、ソフトウェアのインストールが開始します。

//image[0322_VSコードインストール][VSCodeインストール]{
//}

==== ソフトウェア内でのセットアップ

インストールされた「VSCode」を開いてください。初期設定では言語が英語になっているため、日本語に設定を変更します。画面左側にある「拡張機能」を押してください。

//image[0323_VSコード拡張機能ボタン][VSCode拡張機能を追加]{
//}

検索バーに「japanese」と検索し、一番上に表示される拡張機能を「インストール」をクリックし、日本語化する拡張機能をインストールしましょう。その後、右下に再起動を促すポップアップが表示されます。「Change Language and Restart」と書かれたボタンから再起動することで、VSCodeの日本語設定が完了します。

//image[0324_VSコード日本語化][VSCodeを日本語にする]{
//}

==== VSCodeでのPythonのセットアップ

本書ではプログラミング言語は「Python」を使用します。よってVSCodeでPythonが使えるようにセットアップを行いましょう。まずはPython本体のインストールです

以下のサイトから「Python 3.12.3」 の「Python installer(64-bit)」をダウンロードしてください。筆者が現時点でプログラム動作確認済みのバージョンです。以下のリンクを踏むことで直接ダウンロードが行われます。

https://www.python.org/ftp/python/3.12.3/python-3.12.3-amd64.exe

「Python-3.12.3-amd64.exe」というファイルがダウンロードされるので、そのファイルを開いてください。以下の画像のような画面が出現します。

必ず「Add python.exe to PATH」にチェックを付けて、「Install Now」をクリックし、Pythonをダウンロードします。

※書かれているバージョンは違うものですが、画面は同じものが出てきます。

//image[0325_Pythoninstaller画面][Pythonをインストールする]{
//}

次にVSCodeでのPythonの設定を行います。VS Codeを開き、もう一度拡張機能のインストールを行います。検索バーに「python」と入力し、一番上に出てくる拡張機能をインストールしてください。

//image[0326_VSコードPython拡張機能][VSCodeにPythonの拡張機能を追加]{
//}

以上でVSCodeとPythonの設定は完了です。

== まとめ

以上でプログラミングをするための事前準備が完了しました。プログラミングを利用することでより効率的に分析を行うことが可能になります。

次の章では、データを分析するための大量のデータを収集してみます。1カ月単位の大量の有報を自動で取得できるようになりましょう。

//footnote[fn1][アプリケーション・プログラミング・インターフェースの略。ソフトウェアやプログラム、Webサービス間をつなぐインターフェースのこと。]
